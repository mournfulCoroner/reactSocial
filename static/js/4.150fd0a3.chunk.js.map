{"version":3,"sources":["components/Content/Dialogs/Dialogs.module.css","hoc/authRedirectHoc.js","components/Content/Dialogs/Contact/Contact.js","components/Content/Dialogs/Message/Message.js","components/Content/Dialogs/Dialogs.js","components/Content/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","authRedirectHoc","Component","RedirectComponent","this","props","to","React","connect","Contact","className","styles","contact","contact_link","activeClassName","contact_activelink","id","username","Message","self","message","message_text","MessageForm","initialValues","textMessage","validationSchema","Yup","required","max","onSubmit","values","setSubmitting","setTimeout","addMessage","isSubmittig","touched","errors","messages_block__submit_area","name","as","value","messages_block__submit_text","errorStyles","error","placeholder","component","error_message","disabled","messages_block__submit_button","type","Dialogs","messages","dialogs","map","mes","contacts","dialogs_list","messages_block","messages_block__messages","DialogsContainer","compose","dispatch","addMessageCreator","updateNewMessageText","text","updateNewMessageTextCreator"],"mappings":"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","file":"static/js/4.150fd0a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Hdo4\",\"dialogs_list\":\"Dialogs_dialogs_list__y40Is\",\"messages_block\":\"Dialogs_messages_block__1-k2A\",\"messages_block__messages\":\"Dialogs_messages_block__messages__1r2-H\",\"contact\":\"Dialogs_contact__HZSLi\",\"contact_link\":\"Dialogs_contact_link__3iGQc\",\"contact_activelink\":\"Dialogs_contact_activelink__1NH5_\",\"message\":\"Dialogs_message__15n_A\",\"self\":\"Dialogs_self__2nEjp\",\"messages_block__submit_text\":\"Dialogs_messages_block__submit_text__1-gYz\",\"messages_block__submit_button\":\"Dialogs_messages_block__submit_button__1oVwB\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth    }\r\n}\r\nconst authRedirectHoc = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth){\r\n                return <Redirect to={'/login'} /> \r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToProps) (RedirectComponent);\r\n}\r\n\r\n\r\nexport default authRedirectHoc;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './../Dialogs.module.css'\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div className={styles.contact}>\r\n            <NavLink className={styles.contact_link} activeClassName={styles.contact_activelink} to={'/messages/' + props.id}>{props.username}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport styles from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={\r\n        props.self ? `${styles.message} ${styles.self}` : `${styles.message}`\r\n        }>{props.message_text}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport errorStyles from './../common/errorStyles.module.css'\r\nimport Contact from './Contact/Contact';\r\nimport Message from './Message/Message';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ textMessage: '' }}\r\n            validationSchema={Yup.object({\r\n                textMessage: Yup.string()\r\n                    .required().max(120)\r\n            })}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    props.addMessage(values.textMessage);\r\n                    values.textMessage = '';\r\n                    setSubmitting(false);\r\n                }, 400);\r\n            }}\r\n        >\r\n            {({ isSubmittig, values, touched, errors  }) => (\r\n                <Form className={styles.messages_block__submit_area}>\r\n                    <Field name='textMessage' as='textarea' value={values.textMessage}\r\n                    className={\r\n                        touched.textMessage && errors.textMessage ? `${styles.messages_block__submit_text} ${errorStyles.error}` :\r\n                        `${styles.messages_block__submit_text}`\r\n                    } placeholder='Введите сообщение' />\r\n                    <ErrorMessage name='textMessage' component='div' className={errorStyles.error_message}/>\r\n                    <button disabled={isSubmittig}\r\n                    className={styles.messages_block__submit_button} type='submit'>Отправить</button>\r\n                </Form>)}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    let messages = props.dialogs.messages.map((mes) => <Message key={mes.id} id={mes.id} message_text={mes.message_text} self={mes.self} />)\r\n    let contacts = props.dialogs.contacts.map((contact) => <Contact key={contact.id} id={contact.id} username={contact.username}  />)\r\n    \r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogs_list}>\r\n                {\r\n                    contacts\r\n                }\r\n            </div>\r\n            <div className={styles.messages_block}>\r\n                <div className={styles.messages_block__messages}>\r\n                {\r\n                    messages\r\n                }\r\n                </div>\r\n                <MessageForm addMessage={props.addMessage} />\r\n                {/* <div className={styles.messages_block__submit_area}>\r\n                    <textarea onChange={ onChangeNewMessage } value={props.dialogs.newMessageText} className={styles.messages_block__submit_text} placeholder='Введите сообщение'></textarea>\r\n                    <button onClick={ submitMessage } className={styles.messages_block__submit_button}>Отправить</button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport authRedirectHoc from '../../../hoc/authRedirectHoc';\r\nimport { addMessageCreator, updateNewMessageTextCreator } from '../../../redux/reducers/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nclass DialogsContainer extends React.Component{\r\n    render () {\r\n        if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Dialogs {...this.props} /> \r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogs: state.dialogs\r\n        }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessage:(textMessage) => {\r\n            dispatch(addMessageCreator(textMessage));\r\n        },\r\n\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose( connect(mapStateToProps, mapDispatchToProps),\r\n    authRedirectHoc) (DialogsContainer) "],"sourceRoot":""}