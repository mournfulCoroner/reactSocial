{"version":3,"sources":["components/Content/Profile/ProfileHeader/ProfileHeader.module.css","components/Content/Profile/Wall/Post/Post.module.css","components/Content/Profile/Wall/Wall.module.css","components/Content/Profile/ProfileHeader/PorfileStatus.js","components/Content/Profile/ProfileHeader/ProfileInfo/ProfileInfo.js","assets/images/green_dots.svg","components/Content/Profile/ProfileHeader/ProfileHeader.js","components/Content/Profile/Wall/Post/Post.js","components/Content/Profile/Wall/Wall.js","components/Content/Profile/Wall/WallContainer.jsx","components/Content/Profile/Profile.js","components/Content/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatus","props","useState","isEdit","setIsEdit","status","setStatus","useEffect","className","styles","profile_status","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","value","description_input","onDoubleClick","isOwner","description","ProfileInfo","user","aboutMe","profile_info","job_block","lookingForAJob","lookingForAJobDescription","contacts_block","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","ProfileHeader","back_profile","alt","src","greendots","profileHeader","name","fullName","avatar_block","avatar","photos","large","for","avatar_button","id","type","target","files","length","saveAvatar","Preloader","Post","post","main_area","post_avatar","post_text","add_area","likes","WallForm","React","memo","initialValues","postText","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","setTimeout","addPost","isSubmitting","submit_box","as","submit_area","placeholder","submit_button","disabled","Wall","posts","map","wall","WallContainer","connect","state","profile","dispatch","addPostActionCreator","updateNewPostText","text","updateNewPostTextActionCreator","Profile","store","ProfileContainer","userId","this","match","params","history","push","getUserProfileThunk","prevProps","refreshProfile","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.ba07ebce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileHeader\":\"ProfileHeader_profileHeader__NIVT7\",\"profile_status\":\"ProfileHeader_profile_status__2gQah\",\"description\":\"ProfileHeader_description__1RXC9\",\"description_input\":\"ProfileHeader_description_input__2lxIG\",\"back_profile\":\"ProfileHeader_back_profile__1FsLk\",\"avatar_block\":\"ProfileHeader_avatar_block__3XNGS\",\"avatar\":\"ProfileHeader_avatar__xIMh4\",\"avatar_button\":\"ProfileHeader_avatar_button__2HkDI\",\"name\":\"ProfileHeader_name__26h-t\",\"profile_info\":\"ProfileHeader_profile_info__22Z7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__30YIX\",\"main_area\":\"Post_main_area__1mato\",\"post_avatar\":\"Post_post_avatar__3YSId\",\"post_text\":\"Post_post_text__3cZUY\",\"add_area\":\"Post_add_area__3jeh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"Wall_wall__3E3rv\",\"submit_box\":\"Wall_submit_box__2lzQS\",\"submit_area\":\"Wall_submit_area__JbrGU\",\"submit_button\":\"Wall_submit_button__1E8vM\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileHeader.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    let enableEditMode = () => {\r\n        if (props.isOwner) {\r\n            setIsEdit(true);\r\n        }\r\n    }\r\n\r\n    let disableEditMode = () => {\r\n        setIsEdit(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState){\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({ status: this.props.status })\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className={styles.profile_status}>\r\n            {\r\n                !isEdit ?\r\n                    <div onDoubleClick={enableEditMode} className={styles.description}>{status}</div> :\r\n                    <input autoFocus={true} onBlur={disableEditMode} onChange={onStatusChange}\r\n                        className={styles.description_input} value={status}></input>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import styles from './../ProfileHeader.module.css';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n            {props.user.aboutMe ? <div className={styles.profile_info}>\r\n                {props.user.aboutMe}\r\n            </div> : null}\r\n            <div className={styles.profile_info}>\r\n                <div className={styles.job_block}>\r\n                    Looking for a job? {props.user.lookingForAJob ? 'Yes!' : 'No!'}\r\n                    <br />\r\n                    {props.user.lookingForAJobDescription || null}\r\n                </div>\r\n                <br />\r\n                <div className={styles.contacts_block}>\r\n                    My Contacts:\r\n                    <br />\r\n                    <ul>\r\n                        <li>github: {props.user.contacts.github || '-'}</li>\r\n                        <li>vk: {props.user.contacts.vk || '-'}</li>\r\n                        <li>facebook: {props.user.contacts.facebook || '-'}</li>\r\n                        <li>instagram: {props.user.contacts.instagram || '-'}</li>\r\n                        <li>twitter: {props.user.contacts.twitter || '-'}</li>\r\n                        <li>website: {props.user.contacts.website || '-'}</li>\r\n                        <li>youtube: {props.user.contacts.youtube || '-'}</li>\r\n                        <li>mainLink: {props.user.contacts.mainLink || '-'}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/green_dots.3bb7bdc7.svg\";","import Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './PorfileStatus';\r\nimport styles from './ProfileHeader.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport greendots from './../../../../assets/images/green_dots.svg'\r\nimport { useState } from 'react';\r\n\r\nfunction ProfileHeader(props) {\r\n\r\n    const [editInfoMode, setEditInfoMode] = useState(false);\r\n\r\n    if (!props.user) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let savePhoto = (e) => {\r\n        if(e.target.files.length){\r\n            props.saveAvatar(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.back_profile}>\r\n                <img alt='' src={greendots}></img>\r\n            </div>\r\n            <div className={styles.profileHeader}>\r\n                <div className={styles.name}>{props.user.fullName}</div>\r\n                <div className={styles.avatar_block}>\r\n                    <div className={styles.avatar}>\r\n                        <img alt='' src={props.user.photos.large || 'https://pm1.narvii.com/6526/3c85b728f80710521171197855342fd1d88876fb_hq.jpg'}></img>\r\n                    </div>\r\n                    {props.isOwner ? <div>\r\n                        <label for='avatar-upload' className={styles.avatar_button}>Загрузить фото</label> \r\n                        <input id='avatar-upload' type='file' onChange={ savePhoto } />\r\n                        </div>\r\n                     : null}\r\n                </div>\r\n            </div>\r\n            <ProfileStatus isOwner={props.isOwner}\r\n                status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <ProfileInfo user={props.user} isOwner={props.isOwner}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileHeader;","import styles from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.main_area}>\r\n                <img className={styles.post_avatar} alt='' src='https://cdn.xxl.thumbs.canstockphoto.ru/%D0%BF%D1%83%D1%80%D0%BF%D1%83%D1%80%D0%BD%D1%8B%D0%B9-%D1%86%D0%B2%D0%B5%D1%82-%D0%BA%D0%B2%D0%B0%D0%B4%D1%80%D0%B0%D1%82-%D0%BC%D0%BE%D0%B7%D0%B0%D0%B8%D0%BA%D0%B0-%D0%B7%D0%B0%D0%B4%D0%BD%D0%B8%D0%B9-%D0%BF%D0%BB%D0%B0%D0%BD-%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D1%8B%D0%B5-%D0%B2-%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B5-eps_csp34882537.jpg'></img>\r\n                <div className={styles.post_text}>{props.post_text}</div>\r\n            </div>\r\n            <div className={styles.add_area}>\r\n                Лайки: {props.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport styles from './Wall.module.css';\r\nimport { Formik, Field, Form} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst WallForm = React.memo(props => {\r\n    return (\r\n        <Formik initialValues={{ postText: '' }}\r\n            validationSchema={\r\n                Yup.object({\r\n                    postText: Yup.string()\r\n                        .max(350)\r\n                        .required()\r\n                })\r\n            }\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    props.addPost(values.postText);\r\n                    values.postText = '';\r\n                    setSubmitting(false);\r\n                }, 400);\r\n            }} >\r\n\r\n            {({isSubmitting}) => (\r\n                <Form className={styles.submit_box}>\r\n                    <Field as='textarea' name=\"postText\"\r\n                     className={styles.submit_area} placeholder='Введите текст!'/>\r\n                    \r\n                    <button className={styles.submit_button} type='submit'\r\n                     disabled={isSubmitting}> Жмяк</button>\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n\r\n\r\n\r\nfunction Wall(props) {\r\n    let posts = props.posts.map(post => <Post key={post.id} post_text={post.post_text} likes={post.likes} />)\r\n\r\n    return (\r\n        <div className={styles.wall}>\r\n            <WallForm addPost={props.addPost}/>\r\n            {/* <div className={styles.submit_box}>\r\n                <textarea onChange={onChangeNewPost} value={props.newPostText} name=\"postText\" className={styles.submit_area} placeholder='Введите текст!' />\r\n                <button className={styles.submit_button} type='submit' onClick={createPost}>Жмяк</button>\r\n            </div> */}\r\n            {\r\n                posts\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wall;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../../redux/reducers/profile-reducer';\r\nimport Wall from './Wall';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText));\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst WallContainer = connect(mapStateToProps, mapDispatchToProps) (Wall);\r\n\r\nexport default WallContainer;","import styles from './Profile.module.css';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport WallContainer from './Wall/WallContainer';\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileHeader updateUserStatus={props.updateUserStatus} saveAvatar={props.saveAvatar}\r\n             isOwner={props.isOwner} user={props.user} status={props.status}/>\r\n            <WallContainer store={props.store}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfileThunk, saveAvatar, updateUserStatus } from \"../../../redux/reducers/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.id;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfileThunk(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n             this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} user={this.props.user} isOwner={!this.props.match.params.userId}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        user: state.profile.user,\r\n        id: state.auth.id,\r\n        status: state.profile.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfileThunk,\r\n        updateUserStatus,\r\n        saveAvatar\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}